@function calculateValue($currentProgress, $minProgress, $maxProgress, $minValue: 0, $maxValue: 1) {
  $progressRange: calc(#{$maxProgress} - #{$minProgress});
  $progressPosition: calc(calc(#{$currentProgress} - #{$minProgress}) / #{$progressRange});
  $valueRange: calc(#{$maxValue} - #{$minValue});
  $mappedValue: calc($minValue + calc(#{$valueRange} * #{$progressPosition}));
  $limitedValue: max(#{$minValue}, min(#{$maxValue}, #{$mappedValue}));
  @return $limitedValue;
}

@function easeInQuart($progress) {
  @return calc(#{$progress} * #{$progress} * #{$progress});
}

// @function easeInOutCubic($progress) {
//   $progress: max(0, min(1, $progress));
//   @if $progress <= 0.5 {
//     @return 4 * $progress * $progress * $progress;
//   } @else {
//     $progress: $progress - 1;
//     @return 4 * $progress * $progress * $progress + 1;
//   }
// }